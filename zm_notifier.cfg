[ZoneMinderAPI]
# local_server_address is the address used for all ZoneMinder API queries
# (for example, could be http://localhost or other local network address, or
# an external address if desired). world_server_address is the one used to
# access the web server from the internet, used in image URLs. The two do not
# necessarily need to be different. (Don't include the /zm at the end here.)
local_server_address: http://localhost
world_server_address: edit_me_too

# ZoneMinder credentials. (Yes, stored in plain text. Please ensure this
# file is secured. For example, owned and only readable by root.)
username: my_ZoneMinder_username
password: my_ZoneMinder_password

# No is needed for self-signed certificate
verify_ssl: Yes

[Notification]
# Email settings. Uses mutt to send the email. It is up to you to configure
# mutt.
tmp_message_file: /tmp/zm_event_email.txt

# Temporary location of analysis image that will be sent in notifications
tmp_analysis_image: /tmp/zm_analysis_image.jpg

# Size of image to be sent in notifications. Make sure to use the same aspect
# ratio that your cameras record in if scaling down to avoid distortion.
analysis_image_width : 960
analysis_image_height: 720

# Enter email addresses to receive notifications delimited by commas. These
# can also be SMS/MMS gateways. The attach_image parameter corresponds to each
# address in the list. If No, a URL link to the image will be sent instead.
addresses: email_address1, email_address2, etc..
attach_image: Yes, No, No

# Pushover API. Use this if you want to receive notifications from Pushover.
# You need to create an account, and add an application/API token.
# Alternatively, you can use the email gateway associated with your Pushover
# account as one of the addresses above, with no need to create an API token.
use_pushover_api: No
pushover_api_token: your_pushover_api_token
pushover_user_key: your_pushover_user_key
pushover_attach_image: Yes

# For monitors with object detection enabled, this option controls whether a
# notification will be sent even if no objects are detected. Monitors without
# object detection enabled will always send a notification for a new event.
notify_no_object: No

[Daemon]
# How long to pause when checking for new events
running_timeout: 5

# How long to pause when checking if running
stopped_timeout: 30

# Monitors settings. Create a similar section for each monitor for which you
# want to set up object detection. The monitor name is used as the section
# label. No object detection will be done on monitors not listed.
[Monitor1_Name]
# Whether to do object detection (Yes/No). If no, then the next options are not
# needed.
detect_objects:  Yes

# Detection model. Choices are Darknet, MobileNetV3, InceptionV2, HOG.
detection_model: Darknet

# Whether to do detection in max score image only for an event or the entire
# video. If doing the video, it will kick out once a successful detection is
# made. Note that you need a powerful computer to do detection on the video
# while keeping up with events in real time, especially if using Darknet.
# MobileNetV3 and HOG may be fast enough on a moderately-specced computer.
# Darknet is the most accurate and probably a good choice if doing detection
# only on the max score image. Options here are image or video.
detect_in: image

[Monitor2_Name]
detect_objects: Yes
detection_model: MobileNetV3

[Monitor3_Name]
detect_objects: No

# Additional settings for Darknet detection
[Darknet]
# Paths to model configuration
model_path: /usr/share/zm-notifier/yolov4/yolov4.weights
config_path: /usr/share/zm-notifier/yolov4/yolov4.cfg
classes_path: /usr/share/zm-notifier/coco.names.80

# Size to use when scaling down frame for analysis. Should be (320,320),
# (416,416), or (608,608). Smaller = faster; larger = more accurate.
analysis_width = 416
analysis_height = 416

# Classes to detect (from coco.names). Note that Darknet uses classes from
# coco.names.80, while MobileNetV3 and InceptionV2 use coco.names.91, and HOG
# only detects people. If you leave this blank, it will use all available
# classes.
detect_classes: person, car, dog

# Confidence threshold for object detection. This will need to be tuned based
# on the model and monitor to get most reliable performance without false
# detections. Note that this has no effect for HOG.
confidence_threshold = 0.5

# Additional settings for MobileNetV3
[MobileNetV3]
# Paths to model configuration
model_path: /usr/share/zm-notifier/ssd_mobilenet_v3_large_coco_2020_01_14/frozen_inference_graph.pb
config_path: /usr/share/zm-notifier/ssd_mobilenet_v3_large_coco_2020_01_14/ssd_mobilenet_v3_large_coco_2020_01_14.pbtxt
classes_path: /usr/share/zm-notifier/coco.names.91
detect_classes: person
confidence_threshold = 0.5

# Additional settings for InceptionV2
[InceptionV2]
# Paths to model configuration
model_path: /usr/share/zm-notifier/ssd_inception_v2_coco_2017_11_17/frozen_inference_graph.pb
config_path: /usr/share/zm-notifier/ssd_inception_v2_coco_2017_11_17/ssd_inception_v2_coco_2017_11_17.pbtxt
classes_path: /usr/share/zm-notifier/coco.names.91

# Size to use when scaling down frame for analysis.
analysis_width = 300
analysis_height = 300

detect_classes: cat, dog
confidence_threshold = 0.5

# Additional settings for HOG. Note that all of these can have a significant
# effect on accuracy as well as computational time
[HOG]
# Size to use when scaling down frame for analysis.
analysis_width = 640
analysis_height = 480

# Step size while looking through areas of the image. Larger is faster but may
# miss detections.
win_stride_x = 8
win_stride_y = 8

# Scale-down factor in each level of the HOG process. Larger is faster but may
# miss detections.
scale = 1.05
